- Mock 0FB to continue dev after the cancellation of the service?

ZeroBroker
==========
- Add ZeroBroker.request(fbid) and Messenger.sendFile(file)
- ZeroBroker deletes *parts* once it receives them.
- ZeroMessenger deletes *parts* once it reads them.
- ZeroProfile return {photoId} or {photoLink} so we can `ZeroBroker.request(photoId)`
- Files should not be auto-requested. Only request them if the user clicks on them.
- Instead of using my DSL maybe use JSON-RPC?

ZeroMessenger
=============
- ZeroWorker.getProfileInfo() should just return `myActivityLink` and not extract `myId` from it. Let ZeroMessenger do that. 
- Keep usernames in the form /user and not @user.
- Handle events ("Kaito left the group")
- Separate background and app
- Verify the existence of ZeroBroker
- Add option: No ZeroBroker but want to send ZeroMedia? "Do this if the recipient uses ZeroMessenger."
- message.isMine()? Hide senderName from the message bubble!
- Chat.canReply = Chat.isGroup ? hasComposer : (senderLink || nameAppearsInComposer)
- Message.status: fetched, sent, sending, failed
- Message .isMine(), sent(), resend()
- Add Right-To-Left support to Composer/Message.
- Add these attrs: Conversation._oldChunks, Conversation._isUpdating, _isLoading

threads.lastChecked, loading, isEmpty
thread.index = pageNum * 10 + index in page

TODO (Later)
============
- Rename `Moi` -> `ActiveUser`?
- Write ZeroCommon.js: stuff used by Messenger, Worker, and Broker.
- Serialize `composer` form and use axios to send messages. Use the FormData class instead of working with 'HTML <form> elements'.
- **Security**: Have I exposed myself to XSS attacks? (In the 'specialText' thing + converting it to HTML)
- Handle empty messages (that actually contain "0")? Maybe just assume "0" won't be sent or received.
